curl --data '
(string-length "abcdefg")
(slice "abcdefgh" 3 5)
(slice "123abcdefgh" 4)
(concat "abc " 100.001 "\ndef\n" "123" #f)
(index-of "World" "Hello World!")
' localhost:8080  
7
de
bcdefgh
abc 100.001
def
123false
6

curl --data "(sqrt 2)" localhost:8080
1.4142135623730951

curl --data "(floor (sqrt 2))" localhost:8080
1

curl --data "(random)" localhost:8080


curl --data "(type-of 'a)" localhost:8080  
0

curl --data "(div-mod 13 3)" localhost:8080  
(4 . 1)

curl --data "(print '(+ 1 2.0 (a . 1) (a b c (d e)) \"ddd\"))" localhost:8080
(+ 1 2 (a . 1) (a b c (d e)) "ddd")

curl --data "(eval (read \"(+ 1 2 3 4 5)\") (lambda () ()))"  localhost:8080  
15   

curl --data "(eval (read \"(+ 1 2) '(a b) (* 1 2)\") (lambda () ()))"  localhost:8080
2  

curl --data "(eval (read \"(+ 1 2 3 4 5)\") (lambda () ()))"  localhost:8080
15

curl --data "(resolve (read-file-promise \"file1\"))"  localhost:8080
"coola boola\n"

curl --data "(resolve (write-file-promise \"file2\" \"hello erdna\"))"  localhost:8080
cat file2 
hello erdna 

curl --data "
(define erdna (resolve (read-file-promise \"file3\"))) 
(eval (read erdna) (lambda () ())) test
"  localhost:8080

"(define test \"this is a test\")\n(display \"echo\")\n"

"this is a test"

