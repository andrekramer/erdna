curl --data "
(define (string-ref str i) (slice str i (+ i 1)))
(define s \"abcdef\")
(string-ref s 0)
(string-ref s 4)
(string-ref s 5)
(string-ref s 6)
" localhost:8080
Î»
"abcdef"
"a"
"e"
"f"
""     

curl --data "(string->symbol \"abc\");" localhost:8080
abc

curl --data "(symbol->string 'abc);" localhost:8080
"abc"

# setCar! and setCdr! are mutators of lists and better avoided

curl --data "
(define a '(1 . 2)) 
(set-car! a 3) 
a
(define b '(1 2 3)) 
(set-car! b 0) 
b
(define c b)
(set-car! b '()) 
c
" localhost:8080
(1 . 2)
1
(3 . 2)
(1 2 3)
1
(3 2 3)
0
(() 2 3)

curl --data "
(define a '(1 . 2)) 
(set-cdr! a 3) 
a
(define b '(1 2 3)) 
(set-cdr! b '(4 5)) 
b
(define c b)
(set-cdr! b '()) 
c
" localhost:8080
(1 . 2)
2
(1 . 3)
(1 2 3)
(2 3)
(1 4 5)
(1 4 5)
(4 5)
(1)
